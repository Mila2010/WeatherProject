package com.example.wesniemarcelin.chaseweatherappcodingchallenge.presenter;import android.content.Context;import android.support.v4.util.ArrayMap;import android.util.Log;import android.widget.ImageView;import com.example.wesniemarcelin.chaseweatherappcodingchallenge.model.WeatherResponse;import com.example.wesniemarcelin.chaseweatherappcodingchallenge.presenter.network.WeatherService;import com.example.wesniemarcelin.chaseweatherappcodingchallenge.view.WeatherView;import com.squareup.picasso.Picasso;import java.util.List;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;public class SearchWeatherPresenter {    private static String TAG = "YOOOO";    private String BASE_URL = "http://api.openweathermap.org/data/2.5/";    private static final String API_KEY = "1eb0319a72231ce4d37d1da905ccbec2";    List<WeatherResponse.Weather> mWeatherList;    double currentTemp;    ImageView viewIcon;    WeatherView mWeatherView;    ArrayMap<String, String> mWeather = new ArrayMap<>();    private Context mContext;    public SearchWeatherPresenter(WeatherView weatherView) {        this.mWeatherView = weatherView;        mContext = mWeatherView.getContext();    }    public void fetchWeather(String cityName) {        //Retrofit Call        Retrofit retrofit = new Retrofit.Builder()                .baseUrl(BASE_URL)                .addConverterFactory(GsonConverterFactory.create())                .build();        //Service Call to retrieve response from OpenWeather API        WeatherService weatherService = retrofit.create(WeatherService.class);        Call<WeatherResponse> call = weatherService.getWeather(cityName, API_KEY);        //Asynchronous Calls to determine success or failure        call.enqueue(new Callback<WeatherResponse>() {            @Override            public void onResponse(Call<WeatherResponse> call, Response<WeatherResponse> response) {                WeatherResponse weatherResponse = response.body();                mWeatherList = weatherResponse.getWeather();                //url = "http://openweathermap.org/img/w/" + mWeatherList.get(0).getIcon() + ".png";                mWeather.put("url", "http://openweathermap.org/img/w/" + mWeatherList.get(0).getIcon() + ".png");                mWeather.put("mainWeatherType", mWeatherList.get(0).getMain());                //mainWeatherType = mWeatherList.get(0).getMain();                mWeather.put("weatherDescription", mWeatherList.get(0).getDescription());                //weatherDescription = mWeatherList.get(0).getDescription();                mWeather.put("mWindSpeed", Double.toString(weatherResponse.getWind().getSpeed()));                mWeather.put("cityName", weatherResponse.getName());                currentTemp = weatherResponse.getMain().getTemp();                mWeather.put("currentTemp", Double.toString(currentTemp));                mWeatherView.showWeather(mWeather);            }            @Override            public void onFailure(Call<WeatherResponse> call, Throwable t) {                Log.d("MAYDAY!", t.getMessage());            }        });    }}